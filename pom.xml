<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>grimbo.bookmarklets</groupId>
    <artifactId>grimbo-bookmarklets-settlersonlinesimulator</artifactId>
    <version>0</version>
    <packaging>pom</packaging>

    <!--
    This pom is only used to process the JUnit reports that are generated by
    the intern tests.

    It incorporates the Ant version, which uses the junitreport task.

    Both can be run to compare the generated html reports. Both use the same
    source XML files in './reports/junit'.

    The Ant reports go to the ./target/site/reports folder, and the Maven
    reports go in '/target/site/surefire-report.html'.
    -->

    <properties>
        <maven-assembly-plugin.version>2.4</maven-assembly-plugin.version>
        <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
        <maven-release-plugin.version>2.4.2</maven-release-plugin.version>
        <maven-site-plugin.version>3.3</maven-site-plugin.version>
        <maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
        <maven-surefire-report-plugin.version>2.16</maven-surefire-report-plugin.version>
        <maven-project-info-reports-plugin.version>2.7</maven-project-info-reports-plugin.version>

        <doxia-module-markdown.version>1.5</doxia-module-markdown.version>
        <jshint-maven-plugin.version>1.1</jshint-maven-plugin.version>
        <jshint.version>2.1.9</jshint.version>
        <xml-maven-plugin.version>1.0</xml-maven-plugin.version>

        <ant.version>1.9.2</ant.version>
        <sonar-maven-plugin.version>2.2</sonar-maven-plugin.version>

        <!--
        Put in ./reports/junit by the
        ./tests/ReporterToHandleJasmineJunitReports.js Jasmine reporter.
        -->
        <jstestdriver.reportsPath>${basedir}/reports/junit</jstestdriver.reportsPath>

        <!-- Put here by theintern. Doesn't seem an easy way to change. -->
        <!--
        The intern uses full filenames for the lcov file which seems to be in
        accordance with the spec.
            https://github.com/theintern/intern/issues/95
        -->
        <lcov.reportPath>${basedir}/lcov.info</lcov.reportPath>

        <!-- These sonar.xxx properties are the Maven equivalent of sonar-project.properties -->
        <!-- I think projectKey/projectName/projectVersion may be ignored, and the POM's GAV is used instead -->
        <!--
        <sonar.projectKey>grimbo-settlersonlinesimulator-bookmarklet</sonar.projectKey>
        <sonar.projectName>grimbo-settlersonlinesimulator-bookmarklet</sonar.projectName>
        <sonar.projectVersion>1.0</sonar.projectVersion>
        -->

        <!-- Think these are not used, and the Maven sourceDirectory and testSourceDirectory are used instead. -->
        <!--
        <sonar.sources>src</sonar.sources>
        <sonar.tests>test</sonar.tests>
        -->

        <sonar.language>js</sonar.language>
        <sonar.javascript.jstestdriver.reportsPath>${jstestdriver.reportsPath}</sonar.javascript.jstestdriver.reportsPath>
        <sonar.javascript.lcov.reportPath>${lcov.reportPath}</sonar.javascript.lcov.reportPath>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
    </properties>

    <build>
        <!-- Let sonar maven plugin know where the sources are. -->
        <sourceDirectory>${basedir}/src</sourceDirectory>
        <testSourceDirectory>${basedir}/test</testSourceDirectory>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                    <!-- We use Markdown -->
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.doxia</groupId>
                            <artifactId>doxia-module-markdown</artifactId>
                            <version>${doxia-module-markdown.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${maven-project-info-reports-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven-release-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven-antrun-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.ant</groupId>
                            <artifactId>ant</artifactId>
                            <version>${ant.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>xml-maven-plugin</artifactId>
                    <version>${xml-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <!--
        There are two main tasks of the plugins here, and everything happens
        in the "pre-site" phase.

        1. Generate an Ant "junitreport" from the Intern's JUnit xml files.
           These get published to target/site/reports/antjunitreport.

        2. Generate a Checkstyle report.
           a) First we create the folder target/site/reports/checkstyle.
           b) Then we run jshint-maven-plugin to create a checkstyle.xml file
              in that folder.
           c) Then we apply a stylesheet to checkstyle.xml to make
              checkstyle.html.
        -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-junit</artifactId>
                        <version>${ant.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <!--
                    Call out to build.xml to use the junitreport task.
                    -->
                    <execution>
                        <id>generate-junitreport</id>
                        <phase>pre-site</phase>
                        <configuration>
                            <target>
                                <property name="project.reporting.outputDirectory" value="${project.reporting.outputDirectory}"/>
                                <ant antfile="${basedir}/build.xml">
                                    <target name="junitreport"/>
                                </ant>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <!--
                    jshint-maven-plugin won't create folders itself, so have to
                    do it here.
                    -->
                    <execution>
                        <id>create-folder-for-checkstyle-report</id>
                        <phase>pre-site</phase>
                        <configuration>
                            <tasks>
                                <mkdir dir="${project.reporting.outputDirectory}/reports/checkstyle"/>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.cj.jshintmojo</groupId>
                <artifactId>jshint-maven-plugin</artifactId>
                <version>${jshint-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>jlint</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>lint</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <version>${jshint.version}</version>
                    <options>maxparams:3,indent,camelcase,eqeqeq,forin,immed,latedef,noarg,noempty,nonew</options>
                    <globals>require,define</globals>
                    <configFile>${basedir}/jshint.conf.js</configFile>
                    <directories>
                        <directory>src</directory>
                    </directories>
                    <reporter>checkstyle</reporter>
                    <reportFile>${project.reporting.outputDirectory}/reports/checkstyle/checkstyle.xml</reportFile>
                    <failOnError>false</failOnError>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>transform</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <transformationSets>
                        <transformationSet>
                            <dir>${project.reporting.outputDirectory}/reports/checkstyle</dir>
                            <outputDir>${project.reporting.outputDirectory}/reports/checkstyle</outputDir>
                            <includes>
                                <include>checkstyle.xml</include>
                            </includes>
                            <stylesheet>${basedir}/checkstyle.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                    </transformationSets>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-report-plugin.version}</version>
                <configuration>
                    <reportsDirectory>${basedir}/reports/junit</reportsDirectory>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

</project>
